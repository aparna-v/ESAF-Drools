package com.artoo.esaf;

import com.artoo.esaf.TileView;
import com.artoo.esaf.Output;

global Output out;

rule "LAPSelfEmployed - Vintage with esaf - More than 10 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(vintage_esaf == "More than 10 years")
    then
        Ops.calc(out, 10.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Vintage with esaf - 5 to 10 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(vintage_esaf == "5 to 10 years")
    then
        Ops.calc(out, 8.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Vintage with esaf - 2 to 5 years"
ruleflow-group "lap_self_employed"

    when
       $tile : TileView(vintage_esaf == "2 to 5 years")
    then
        Ops.calc(out, 6.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Vintage with esaf - Less than 2 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(vintage_esaf == "Less than 2 years")
    then
        Ops.calc(out, 4.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Vintage with esaf - Not an ESAF customer"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(vintage_esaf == "Not an ESAF customer")
    then
        Ops.calc(out, 0.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Pucca shop , own premises"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Pucca shop , own premises")
    then
        Ops.calc(out, 10.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Own house is the business premises"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Own house is the business premises")
    then
        Ops.calc(out, 8.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Pucca shop, rented.  >4 years in the current location"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Pucca shop, rented.  >4 years in the current location")
    then
        Ops.calc(out, 7.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Pucca shop, rented.  <4 years in the current location and residence within 10 kms"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Pucca shop, rented.  <4 years in the current location and residence within 10 kms")
    then
        Ops.calc(out, 6.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Pucca shop, rented.  <4 years in the current location and residence  greater than 10 kms"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Pucca shop, rented.  <4 years in the current location and residence  greater than 10 kms")
    then
        Ops.calc(out, 5.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Way side temporary set up"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Way side temporary set up")
    then
        Ops.calc(out, 4.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Location - Not Applicable (Salaried borrower)"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_location == "Not Applicable (Salaried borrower)")
    then
        Ops.calc(out, 0.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Salaried"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Salaried")
    then
        Ops.calc(out, 10.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Return NRI"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Return NRI")
    then
        Ops.calc(out, 9.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Owner of MSME’s"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Owner of MSME’s")
    then
        Ops.calc(out, 8.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Self employed professionals"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Self employed professionals")
    then
        Ops.calc(out, 8.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Blue Collar NRI"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Blue Collar NRI")
    then
        Ops.calc(out, 5.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Daily Wage"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Daily Wage")
    then
        Ops.calc(out, 5.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Occupation/Business Groups - Others"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(business_group == "Others")
    then
        Ops.calc(out, 2.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Vintage - >= 2 and < 4 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(experience_in_business == ">= 2 and < 4 years")
    then
        Ops.calc(out, 4.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Vintage - >= 4 and < 6 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(experience_in_business == ">= 4 and < 6 years")
    then
        Ops.calc(out, 6.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Vintage - >= 6 and < 8 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(experience_in_business == ">= 6 and < 8 years")
    then
        Ops.calc(out, 8.0d, 5.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Business Vintage - Greater than 8 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(experience_in_business == "Greater than 8 years")
    then
        Ops.calc(out, 10.0d, 5.0d, Ops.BORROWER_CHARC);
        
end


rule "LAPSelfEmployed - Own house available for pledging - Available and not pledged"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Available and not pledged")
    then
        Ops.calc(out, 10.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - Own Vacant Land available"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Own Vacant Land available")
    then
        Ops.calc(out, 9.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - Own house , pledged, Repaid promptly"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Own house , pledged, Repaid promptly")
    then
        Ops.calc(out, 8.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - Own house , pledged, Repaid occassionaly"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Own house , pledged, Repaid occassionaly")
    then
        Ops.calc(out, 7.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - Staying in family House, title deed not pledged"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Staying in family House, title deed not pledged")
    then
        Ops.calc(out, 6.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - Staying in family House, title deed pledged"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Staying in family House, title deed pledged")
    then
        Ops.calc(out, 5.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - No repayment"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "No repayment")
    then
        Ops.calc(out, 4.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - Staying in rental, family share available"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "Staying in rental, family share available")
    then
        Ops.calc(out, 3.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - Own house available for pledging - No own / family house, staying on rent"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(house_pledging == "No own / family house, staying on rent")
    then
        Ops.calc(out, 0.0d, 10.0d, Ops.BORROWER_CHARC);
        
end

rule "LAPSelfEmployed - FOIR - Less than 55%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(foir < 55)
    then
        Ops.calc(out, 10.0d, 20.0d, Ops.FINANCIAL_CHARC);
        
end

rule "LAPSelfEmployed - FOIR - >=55% to <65%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(foir >= 55 && foir < 65)
    then
        Ops.calc(out, 8.0d, 20.0d, Ops.FINANCIAL_CHARC);
        
end

rule "LAPSelfEmployed - FOIR - >=65% to <75%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(foir >= 65 && foir < 75)
    then
        Ops.calc(out, 6.0d, 20.0d, Ops.FINANCIAL_CHARC);
        
end

rule "LAPSelfEmployed - FOIR - >=75% to <85%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(foir >= 75 && foir < 85)
    then
        Ops.calc(out, 4.0d, 20.0d, Ops.FINANCIAL_CHARC);
        
end

rule "LAPSelfEmployed - FOIR - more than or equal to 85%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(foir >= 85)
    then
        Ops.calc(out, 2.0d, 20.0d, Ops.FINANCIAL_CHARC);
        
end

rule "LAPSelfEmployed - Credit history of the borrower - No Default history (Accounts running regular)"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(borrower_history == "No Default history (Accounts running regular)")
    then
        Ops.calc(out, 10.0d, 10.0d, Ops.TRANSACTL_CHARC);
        
end

rule "LAPSelfEmployed - Credit history of the borrower - Occasional Defaults"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(borrower_history == "Occasional Defaults")
    then
        Ops.calc(out, 7.0d, 10.0d, Ops.TRANSACTL_CHARC);
        
end

rule "LAPSelfEmployed - Credit history of the borrower - No Credit History"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(borrower_history == "No Credit History")
    then
        Ops.calc(out, 5.0d, 10.0d, Ops.TRANSACTL_CHARC);
        
end

rule "LAPSelfEmployed - Credit history of the borrower - Frequent Defaults"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(borrower_history == "Frequent Defaults")
    then
        Ops.calc(out, 0.0d, 10.0d, Ops.TRANSACTL_CHARC);
        
end

rule "LAPSelfEmployed - Property Value - Property has appreciated in last 3 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(property_value == "Property has appreciated in last 3 years")
    then
        Ops.calc(out, 10.0d, 6.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Property Value - Property has not appreciated in last 3 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(property_value == "Property has not appreciated in last 3 years")
    then
        Ops.calc(out, 4.0d, 6.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Property Value - Property has depreciated in last 3 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(property_value == "Property has depreciated in last 3 years")
    then
        Ops.calc(out, -2.0d, 6.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Age of building - Less than 1 year/new construction"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(collateral_asset_age < 1)
    then
        Ops.calc(out, 10.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Age of building - >=1 or <5 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(collateral_asset_age >= 1 && collateral_asset_age <5)
    then
        Ops.calc(out, 8.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Age of building - >=5 or <10 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(collateral_asset_age >= 5 && collateral_asset_age <10)
    then
        Ops.calc(out, 6.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Age of building - >=10 or <15 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(collateral_asset_age >= 10 && collateral_asset_age <15)
    then
        Ops.calc(out, 4.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Age of building - >=15 years"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(collateral_asset_age >= 15)
    then
        Ops.calc(out, 2.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - LTV - Less than or equal to 40%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(ltv <= 40)
    then
        Ops.calc(out, 10.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - LTV - >40% and <=50%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(ltv > 40 && ltv <=50)
    then
        Ops.calc(out, 8.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - LTV - >50% and <=60%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(ltv > 50 && ltv <=60)
    then
        Ops.calc(out, 6.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - LTV - >60% and <=70%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(ltv > 60 && ltv <=70)
    then
        Ops.calc(out, 4.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - LTV - >70% and <=80%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(ltv > 70 && ltv <=80)
    then
        Ops.calc(out, 2.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - LTV - more than 80%"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(ltv > 80)
    then
        Ops.calc(out, 0.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end


rule "LAPSelfEmployed - Type of property - Residential"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(
            collateral_asset_type == "residential_property_self_occupied" ||
            collateral_asset_type == "residential_property_rented" ||
            collateral_asset_type == "village_panchayat_appr_res_prop_so" ||
            collateral_asset_type == "village_panchayat_appr_res_prop_rented" )
    then
        Ops.calc(out, 10.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Type of property - Commercial"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(
            collateral_asset_type == "commercial_property_self_occupied" ||
            collateral_asset_type == "Commercial Property - Rented" ||
            collateral_asset_type == "vacant_plot")
    then
        Ops.calc(out, 8.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Type of property - Industrial"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(collateral_asset_type == "farm_house_self_occupied")
    then
        Ops.calc(out, 6.0d, 10.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Location of property - Property is located near the main road/highway and access to the property is via tarred roads"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(property_pledged == "Property is located near the main road/highway and access to the property is via tarred roads")
    then
        Ops.calc(out, 10.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Location of property - Access to the property is via gravel road"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(property_pledged == "Access to the property is via gravel road")
    then
        Ops.calc(out, 6.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end

rule "LAPSelfEmployed - Location of property - Access to the property is via mud path"
ruleflow-group "lap_self_employed"

    when
        $tile : TileView(property_pledged == "Access to the property is via mud path")
    then
        Ops.calc(out, 2.0d, 7.0d, Ops.PROPERTY_CHARC);
        
end